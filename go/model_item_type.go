// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * xiv-craftsmanship-api
 *
 * xiv-craftsmanship-api
 *
 * API version: 1.0.0
 * Contact: hazuki3417@gmail.com
 */

package openapi


import (
	"fmt"
)


// ItemType : 
type ItemType string

// List of ItemType
const (
	MATERIAL ItemType = "material"
	CRYSTAL ItemType = "crystal"
)

// AllowedItemTypeEnumValues is all the allowed values of ItemType enum
var AllowedItemTypeEnumValues = []ItemType{
	"material",
	"crystal",
}

// validItemTypeEnumValue provides a map of ItemTypes for fast verification of use input
var validItemTypeEnumValues = map[ItemType]struct{}{
	"material": {},
	"crystal": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ItemType) IsValid() bool {
	_, ok := validItemTypeEnumValues[v]
	return ok
}

// NewItemTypeFromValue returns a pointer to a valid ItemType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewItemTypeFromValue(v string) (ItemType, error) {
	ev := ItemType(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for ItemType: valid values are %v", v, AllowedItemTypeEnumValues)
}



// AssertItemTypeRequired checks if the required fields are not zero-ed
func AssertItemTypeRequired(obj ItemType) error {
	return nil
}

// AssertItemTypeConstraints checks if the values respects the defined constraints
func AssertItemTypeConstraints(obj ItemType) error {
	return nil
}
